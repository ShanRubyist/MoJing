// 商品详情组件
Vue.component('good-detail', {
    props: [
        'visible',
        'goods_data',
        'current_good'
    ],
    data: function () {
        return {
            coupon_list: null,
            price_list: null,
            comment_list: null,
            name_list: null,
            ad_list: null,
            spinning: false
        }
    },
    watch: {
        current_good: function () {
            this.refresh_tabs();
        }
    },
    updated: function () {
        // 会造成无限循环更新
        // this.refresh_tabs()
    },
    methods: {
        onClose: function () {
            this.$emit('close-drawer');
        },
        refresh_comments_tab: function () {
            var that = this
            that.spinning = true;

            axios.get(window.location.href + 'goods/comments', {
                headers: {
                    'Accept': 'application/json'
                },
                params: {
                    good_id: this.current_good.spu_id
                }
            }).then(function (reason) {
                that.comment_list = reason.data;

                // 基于准备好的dom，初始化echarts实例
                var myChart = echarts.init(document.getElementById('comment_graph'));

                // 指定图表的配置项和数据
                let option = {
                    title: {
                        text: '评价数走势图'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    grid: {
                        left: '3%',
                        right: '3%',
                        bottom: '3%',
                        containLabel: true
                    },
                    toolbox: {
                        feature: {
                            saveAsImage: {}
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: that.comment_list.time
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [
                        {
                            type: 'line',
                            data: that.comment_list.data
                        }
                    ]
                };

                // 使用刚指定的配置项和数据显示图表。
                myChart.setOption(option);
                that.spinning = false
            }).catch(function (reason) {
                that.spinning = false
            })
        },
        refresh_graph_tab: function () {
            var that = this
            that.spinning = true;

            axios.get(window.location.href + 'goods/prices', {
                headers: {
                    'Accept': 'application/json'
                },
                params: {
                    good_id: this.current_good.spu_id
                }
            }).then(function (reason) {
                that.price_list = reason.data;

                // 基于准备好的dom，初始化echarts实例
                var myChart = echarts.init(document.getElementById('price_graph'));

                // 指定图表的配置项和数据
                let option = {
                    title: {
                        text: '价格走势图'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        type: 'scroll',
                        top: 30,
                        data: that.price_list.legend
                    },
                    grid: {
                        left: '3%',
                        right: '3%',
                        top: 80,
                        bottom: '3%',
                        containLabel: true
                    },
                    toolbox: {
                        feature: {
                            saveAsImage: {}
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: that.price_list.time
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: []
                };

                that.price_list.data.forEach(function (item) {
                    option["series"].push({
                        name: item.spec,
                        type: 'line',
                        data: item.prices
                    })
                })

                // 使用刚指定的配置项和数据显示图表。
                myChart.setOption(option);
                that.spinning = false;
            }).catch(function (reason) {
                that.spinning = false;
            })
        },
        refresh_coupons_tab: function () {
            var that = this
            that.spinning = true;

            axios.get(window.location.href + 'goods/coupons', {
                headers: {
                    'Accept': 'application/json'
                },
                params: {
                    good_id: this.current_good.spu_id
                }
            }).then(function (reason) {
                that.spinning = false;
                that.coupon_list = reason.data;
            }).catch(function (reason) {
                that.spinning = false;
            })
        },
        refresh_names_tab: function () {
            var that = this
            that.spinning = true;

            axios.get(window.location.href + 'goods/names', {
                headers: {
                    'Accept': 'application/json'
                },
                params: {
                    good_id: this.current_good.spu_id
                }
            }).then(function (reason) {
                that.spinning = false;
                that.name_list = reason.data;
            }).catch(function (reason) {
                that.spinning = false;
            })
        },
        refresh_ads_tab: function () {
            var that = this
            that.spinning = true;

            axios.get(window.location.href + 'goods/ads', {
                headers: {
                    'Accept': 'application/json'
                },
                params: {
                    good_id: this.current_good.spu_id
                }
            }).then(function (reason) {
                that.spinning = false;
                that.ad_list = reason.data;
            }).catch(function (reason) {
                that.spinning = false;
            })
        },
        refresh_tabs: function () {
            this.refresh_coupons_tab()
            this.refresh_comments_tab()
            this.refresh_graph_tab()
            this.refresh_names_tab()
            this.refresh_ads_tab()
        },
        change_good_detail_tab: function (key) {
            var that = this
            if (key == 1) {
                that.refresh_names_tab()
            } else if (key == 2) {
                that.refresh_ads_tab()
            } else if (key == 3) {
                that.refresh_graph_tab()
            } else if (key == 4) {
                that.refresh_coupons_tab()
            } else if (key == 5) {
                that.refresh_comments_tab()

            }
        },
        change_good: function (good) {
            this.$emit('change-good', good);
        }
    },
    template: '<%= import_partial('home/shop_spy/details/good_detail_templ') %>'
})
